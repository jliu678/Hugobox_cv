<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Feature Quantification | Jiyuan Liu</title>
    <link>http://localhost:1313/tags/feature-quantification/</link>
      <atom:link href="http://localhost:1313/tags/feature-quantification/index.xml" rel="self" type="application/rss+xml" />
    <description>Feature Quantification</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Sat, 12 Apr 2025 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hu_fd2be5a69becaf9e.png</url>
      <title>Feature Quantification</title>
      <link>http://localhost:1313/tags/feature-quantification/</link>
    </image>
    
    <item>
      <title>üß¨ EM algorithm, EM with max a posterior, full Bayesian inferences (variational Bayesian) which might be used in auto-coder</title>
      <link>http://localhost:1313/post/19.ememwithmapvariationalbayesian/</link>
      <pubDate>Sat, 12 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/19.ememwithmapvariationalbayesian/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ what makes neural network so powerful and popular</title>
      <link>http://localhost:1313/post/18.what_make_neural_network_powerful_popular/</link>
      <pubDate>Fri, 11 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/18.what_make_neural_network_powerful_popular/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ Smooth tests of goodness of Fit used in Stijn Hawinkel ‚Äôs plos one paper</title>
      <link>http://localhost:1313/post/17.smooth.tests.of.goodness.of.fit/</link>
      <pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/17.smooth.tests.of.goodness.of.fit/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ how good is negative binomial, why AI works for biology</title>
      <link>http://localhost:1313/post/16.how.good.is.negative.binominal/</link>
      <pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/16.how.good.is.negative.binominal/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ Seurat to analysis large sample size of bulk RNAseq. Discuss Wixcox is better for clinical samples</title>
      <link>http://localhost:1313/post/15.use.seurat.for.bulk.rnaseq/</link>
      <pubDate>Tue, 08 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/15.use.seurat.for.bulk.rnaseq/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ Deep Neural Network to integrate scRNAseq and spatial genomics</title>
      <link>http://localhost:1313/post/13z.scvi_integrate_scrna_spatial/</link>
      <pubDate>Mon, 07 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/13z.scvi_integrate_scrna_spatial/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ Spatial genomics presentation</title>
      <link>http://localhost:1313/post/14.spatial_genomics_presentation/</link>
      <pubDate>Mon, 07 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/14.spatial_genomics_presentation/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ Bayesian abundance statistics in PRCC</title>
      <link>http://localhost:1313/post/12.basian_abundance_statistics/</link>
      <pubDate>Sun, 06 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/12.basian_abundance_statistics/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ Yolov8</title>
      <link>http://localhost:1313/post/13.yolov8/</link>
      <pubDate>Sat, 05 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/13.yolov8/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ Math Derivation of CME-defined Stochastic Model of RNA Velocity</title>
      <link>http://localhost:1313/post/11a.velocity_unraveled/</link>
      <pubDate>Fri, 04 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/11a.velocity_unraveled/</guid>
      <description>&lt;h1 id=&#34;equation-18-from-velocity-unraveled&#34;&gt;Equation 18 from &lt;a href=&#34;https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1010492&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;velocity unraveled&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id=&#34;-1-probability-generating-function-pgf&#34;&gt;üß¨ 1. Probability generating function (PGF)&lt;/h2&gt;
&lt;p&gt;We define the state of a cell as:&lt;/p&gt;
 
$$x = (x_u, x_s)$$ 


&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; $x_u$ 
: unspliced mRNA count&lt;/li&gt;
&lt;li&gt; $x_s$ 
: spliced mRNA count&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We now write the generating function of their joint distribution:&lt;/p&gt;
 
$$G(u_u, u_s, t) = \sum_x P(x,t)(u_u + 1)^{x_u}(u_s + 1)^{x_s}$$ 


&lt;p&gt;This is a modified bivariate probability generating function, where the &amp;ldquo;+1&amp;rdquo; shift is standard in certain moment-generating setups. It lets you cleanly extract moments via derivatives of  $G$ 
.&lt;/p&gt;
&lt;h2 id=&#34;-2-characteristic-of-odes-derived-from-cme&#34;&gt;‚öôÔ∏è 2. Characteristic of ODEs derived from CME&lt;/h2&gt;
 $$U_1(u_u, u_s, s) = \frac{u_s \beta}{\beta - \gamma} e^{-\gamma s} + \left(u_u - \frac{u_s \beta}{\beta - \gamma}\right) e^{-\beta s}$$ 

&lt;p&gt;This expression arises from &lt;a href=&#34;#Derive-G&#34;&gt;solving a linear system of ODEs for the chemical master equation (CME) via generating functions&lt;/a&gt;, and it essentially encodes how the state propagates in time. It&amp;rsquo;s derived from how unspliced ‚Üí spliced reactions occur over time.&lt;/p&gt;
&lt;h2 id=&#34;-3-log-generating-function-hahahugoshortcode22s6hbhb&#34;&gt;üß† 3. Log-generating function  $f$ 
&lt;a id=&#34;log-generating-function-first-introduced&#34;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt; 
$$f(u_u, u_s, t) := \ln G(u_u, u_s, t) = \int_0^t \alpha(t-s) U_1(u_u, u_s, s) ds$$ 


This integral form is derived in &lt;a href=&#34;#Derive-log-generating-function&#34;&gt;later section&lt;/a&gt; and it tells us how the log of the generating function evolves, driven by transcription rate  $\alpha(t-s)$ 
 and the system dynamics encoded in  $U_1$ 
. Essentially, it&amp;rsquo;s the cumulative effect of production and conversion over time.&lt;/p&gt;
&lt;p&gt;Then the log-GF can be written in a linear form in  $u_u$ 
 and  $u_s$ 
:&lt;/p&gt;
 
$$f(u_u, u_s, t) = \mu_u(t) u_u + \mu_s(t) u_s$$ 


&lt;p&gt;This suggests that the process is governed by Poisson distributions, since the log-GF is linear in the arguments.&lt;/p&gt;
&lt;h2 id=&#34;-4-explicit-distribution--product-of-poissons&#34;&gt;üìä 4. Explicit distribution ‚Äî product of Poissons&lt;/h2&gt;
&lt;p&gt;Given the above, we can now recover the joint distribution  $P(x,t)$ 
:&lt;/p&gt;
 
$$P(x,t) = \frac{\mu_u(t)^{x_u} e^{-\mu_u(t)}}{x_u!} \cdot \frac{\mu_s(t)^{x_s} e^{-\mu_s(t)}}{x_s!}$$ 


&lt;p&gt;So:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; $x_u \sim \text{Poisson}(\mu_u(t))$ 
&lt;/li&gt;
&lt;li&gt; $x_s \sim \text{Poisson}(\mu_s(t))$ 
&lt;/li&gt;
&lt;li&gt;Jointly independent&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This model assumes that given time  $t$ 
, the spliced and unspliced counts are independent Poisson-distributed variables, whose rates  $\mu_u(t), \mu_s(t)$ 
 evolve in time according to the underlying biochemistry.&lt;/p&gt;
&lt;h2 id=&#34;-5-time-averaged-distribution&#34;&gt;üßÆ 5. Time-averaged distribution&lt;/h2&gt;
&lt;p&gt;Finally, since single-cell sequencing samples cells asynchronously in time, the observed distribution over counts is not  $P(x,t)$ 
 at a fixed  $t$ 
, but a time-averaged version:&lt;/p&gt;
 
$$P(x) = \frac{1}{T} \int_0^T P(x,t) dt$$ 


&lt;p&gt;This is a mixture of Poissons over time, reflecting the asynchrony of cells in scRNA-seq snapshots. This averaging introduces overdispersion, which is critical to explain the variance observed in real data ‚Äî greater than what a single Poisson can model.&lt;/p&gt;
&lt;h2 id=&#34;-summary&#34;&gt;‚úÖ Summary&lt;/h2&gt;
&lt;p&gt;This passage describes the full pipeline of deriving time-dependent joint distributions of unspliced and spliced mRNA counts in a stochastic birth‚Äìdeath model, and how to transform this into what single-cell experiments would observe via time-averaged Poisson mixtures.&lt;/p&gt;
&lt;h1 id=&#34;a-intro-multivariate-probability-generating-function-pgf&#34;&gt;A) Intro: Multivariate Probability Generating Function (PGF)&lt;/h1&gt;
&lt;h2 id=&#34;-1-multivariate-probability-generating-function-pgf&#34;&gt;üî¢ 1. Multivariate Probability Generating Function (PGF)&lt;/h2&gt;
&lt;p&gt;This function encodes the entire joint distribution of the random vector  $x = (x_u, x_s)$ 
, i.e., the number of unspliced ( $x_u$ 
) and spliced ( $x_s$ 
) transcripts.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s a bivariate generating function, meaning it&amp;rsquo;s a function of two complex variables  $u_u$ 
 and  $u_s$ 
.&lt;/p&gt;
&lt;p&gt;The inclusion of  $+1$ 
 makes it a shifted PGF, often done for technical convenience (especially when converting to moment-generating functions).&lt;/p&gt;
&lt;h2 id=&#34;-2-moment-extraction&#34;&gt;üìà 2. Moment Extraction&lt;/h2&gt;
&lt;p&gt;From the properties of generating functions:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;First Moments:&lt;/strong&gt;&lt;/p&gt;
 
$$ \frac{\partial G}{\partial u_u}\bigg|_{u_u = u_s = 0} = E[x_u], \quad \frac{\partial G}{\partial u_s}\bigg|_{u_u = u_s = 0} = E[x_s] $$ 


&lt;p&gt;&lt;strong&gt;Second Moments / Covariances:&lt;/strong&gt;&lt;/p&gt;
 
$$ \frac{\partial^2 G}{\partial u_u^2}\bigg|_{u_u = u_s = 0} = E[x_u(x_u - 1)], \quad \frac{\partial^2 G}{\partial u_u \partial u_s}\bigg|_{u_u = u_s = 0} = E[x_u x_s] $$ 


&lt;p&gt;These derivatives allow us to compute variances, covariances, and higher-order statistics of transcript counts.&lt;/p&gt;
&lt;h2 id=&#34;-3-connection-to-biological-reactions&#34;&gt;üß¨ 3. Connection to Biological Reactions&lt;/h2&gt;
&lt;p&gt;In a linear RNA kinetic model:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; $x_u$ 
: produced at rate  $\alpha$ 
, converted to  $x_s$ 
 at rate  $\beta$ 
&lt;/li&gt;
&lt;li&gt; $x_s$ 
: degraded at rate  $\gamma$ 
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The evolution of  $G(u_u, u_s, t)$ 
 over time follows a partial differential equation that arises from the Chemical Master Equation (CME), which governs the time evolution of probability distributions in chemical kinetics.&lt;/p&gt;
&lt;h2 id=&#34;-4-time-dependence&#34;&gt;‚è≥ 4. Time-Dependence&lt;/h2&gt;
&lt;p&gt; $G$ 
 is explicitly time-dependent, evolving as the distribution  $P(x,t)$ 
 changes.&lt;/p&gt;
&lt;p&gt;In some derivations, the log-generating function  $f = \log G$ 
 is linear in  $u_u, u_s$ 
, which implies that  $x_u, x_s \sim \text{Poisson}(\mu_u(t)), \text{Poisson}(\mu_s(t))$ 
 and are independent.&lt;/p&gt;
&lt;h2 id=&#34;-5-decay-and-stationarity&#34;&gt;üìâ 5. Decay and Stationarity&lt;/h2&gt;
&lt;p&gt;As  $t \to \infty$ 
:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The means  $\mu_u(t), \mu_s(t)$ 
 stabilize.&lt;/li&gt;
&lt;li&gt;So does the generating function, converging to that of a product of Poisson distributions (one for each transcript species).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-summary-why-it-matters&#34;&gt;üí° Summary: Why It Matters&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Encodes all statistical information&lt;/strong&gt; about  $x_u, x_s$ 
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enables exact computation&lt;/strong&gt; of moments, cumulants, and correlations&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Links stochastic biochemical kinetics&lt;/strong&gt; with observed scRNA-seq distributions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Supports modeling&lt;/strong&gt; of noise, burstiness, and cell-to-cell heterogeneity&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;b-derive--via-method-of-characteristics&#34;&gt;B) Derive $u_u(s)$ via method of characteristics &lt;a id=&#34;Derive-G&#34;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt; $U_1(u_u, u_s, s)$ 
 is claimed to be  $u_u(s)$ 
, which is the solution to the ODE derived from the Chemical Master Equation (CME) for the two-species birth-death process representing unspliced (u) and spliced (s) mRNA dynamics.&lt;/p&gt;
 $$U_1(u_u, u_s, s) := u_u(s) = \frac{u_s \beta}{\beta - \gamma} e^{-\gamma s} + \left(u_u - \frac{u_s \beta}{\beta - \gamma}\right) e^{-\beta s}$$ 

&lt;p&gt;This derivation uses the method of characteristics applied to the generating function of a stochastic process governed by the Chemical Master Equation (CME). We consider a two-species birth-death process representing unspliced (u) and spliced (s) mRNA dynamics.&lt;/p&gt;
&lt;h2 id=&#34;step-1-define-the-generating-function&#34;&gt;Step 1: Define the Generating Function&lt;/h2&gt;
&lt;p&gt;Let the joint probability distribution of unspliced and spliced mRNA at time  $t$ 
 be  $P(x_u, x_s, t)$ 
. The generating function is:&lt;/p&gt;
 $$G(z_u, z_s, t) = \sum_{x_u, x_s} P(x_u, x_s, t) z_u^{x_u} z_s^{x_s}$$ 

&lt;p&gt;We define new variables:&lt;/p&gt;
 $$z_u = u_u + 1, \quad z_s = u_s + 1$$ 

&lt;p&gt;so the generating function becomes:&lt;/p&gt;
 $$G(u_u, u_s, t) = \sum_{x_u, x_s} P(x_u, x_s, t) (u_u + 1)^{x_u} (u_s + 1)^{x_s}$$ 

&lt;h2 id=&#34;step-2-cme-and-corresponding-pde&#34;&gt;Step 2: CME and Corresponding PDE&lt;/h2&gt;
&lt;p&gt;The CME for this system is governed by the reactions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Transcription (birth of unspliced): rate  $\alpha$ 
&lt;/li&gt;
&lt;li&gt;Splicing:  $u \xrightarrow{\beta} s$ 
&lt;/li&gt;
&lt;li&gt;Degradation:  $s \xrightarrow{\gamma} \emptyset$ 
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From the CME, the PDE for  $G$ 
 is below as derived in &lt;a href=&#34;#Derive-step-3-of-B&#34;&gt;another section&lt;/a&gt;):&lt;/p&gt;
 $$\frac{\partial G}{\partial t} = \alpha u_u G + \beta(u_s - u_u)\frac{\partial G}{\partial u_u} - \gamma u_s \frac{\partial G}{\partial u_s}$$ 

&lt;h2 id=&#34;step-3-method-of-characteristics-turn-pde-into-odes&#34;&gt;Step 3: Method of Characteristics (turn PDE into ODEs)&lt;/h2&gt;
&lt;p&gt;We now transform this PDE into ODEs using the method of characteristics. Let  $u_u(s), u_s(s), G(s)$ 
 be functions of characteristic time  $s$ 
 such that along these paths:&lt;/p&gt;
 $$\frac{du_u}{ds} = \beta(u_s - u_u), \quad \frac{du_s}{ds} = -\gamma u_s, \quad \frac{dG}{ds} = \alpha u_u G$$ 

&lt;p&gt;Let&amp;rsquo;s solve these:&lt;/p&gt;
&lt;h2 id=&#34;step-4-solve-for-hahahugoshortcode22s61hbhb&#34;&gt;Step 4: Solve for  $u_s(s)$ 
&lt;/h2&gt;
 $$\frac{du_s}{ds} = -\gamma u_s \Rightarrow u_s(s) = u_s(0) e^{-\gamma s}$$ 

&lt;h2 id=&#34;step-5-solve-for-hahahugoshortcode22s63hbhb&#34;&gt;Step 5: Solve for  $u_u(s)$ 
&lt;/h2&gt;
&lt;p&gt;Use integrating factor method:&lt;/p&gt;
 $$\frac{du_u}{ds} + \beta u_u = \beta u_s(s) = \beta u_s(0) e^{-\gamma s}$$ 

&lt;p&gt;Multiply both sides by  $e^{\beta s}$ 
:&lt;/p&gt;
 $$\frac{d}{ds}(u_u e^{\beta s}) = \beta u_s(0) e^{(\beta - \gamma)s}$$ 

&lt;p&gt;Integrate:&lt;/p&gt;
 $$u_u(s) e^{\beta s} = u_u(0) + \frac{\beta u_s(0)}{\beta - \gamma}(e^{(\beta - \gamma)s} - 1)$$ 

&lt;p&gt;Solve for  $u_u(s)$ 
:&lt;/p&gt;
 $$u_u(s) = u_u(0) e^{-\beta s} + \frac{\beta u_s(0)}{\beta - \gamma}(e^{-\gamma s} - e^{-\beta s})$$ 

&lt;h2 id=&#34;step-6-define-hahahugoshortcode22s70hbhb&#34;&gt;Step 6: Define  $U_1(u_u, u_s, s)$ 
&lt;/h2&gt;
&lt;p&gt;We identify:&lt;/p&gt;
 $$U_1(u_u, u_s, s) := u_u(s) = \frac{u_s \beta}{\beta - \gamma} e^{-\gamma s} + \left(u_u - \frac{u_s \beta}{\beta - \gamma}\right) e^{-\beta s}$$ 

&lt;h1 id=&#34;b1-derive-pde-from-cme-step-2-of-b&#34;&gt;B.1) Derive PDE from CME (step 2 of B)&lt;/h1&gt;
&lt;h2 id=&#34;step-1-write-the-cme-explicitly&#34;&gt;Step 1: Write the CME explicitly&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;Derive-step-3-of-B&#34;&gt;&lt;/a&gt;
The CME for the joint distribution  $P(x_u, x_s, t)$ 
 of the unspliced  $x_u$ 
 and spliced  $x_s$ 
 RNA is:&lt;/p&gt;

$$
\frac{d}{dt}P(x_u, x_s, t) = \alpha[P(x_u - 1, x_s, t) - P(x_u, x_s, t)] + \beta[(x_u + 1)P(x_u + 1, x_s - 1, t) - x_u P(x_u, x_s, t)] + \gamma[(x_s + 1)P(x_u, x_s + 1, t) - x_s P(x_u, x_s, t)] \qquad (9)
$$


&lt;p&gt;where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; $\alpha$ 
: production rate of unspliced RNA&lt;/li&gt;
&lt;li&gt; $\beta$ 
: splicing rate (unspliced ‚Üí spliced)&lt;/li&gt;
&lt;li&gt; $\gamma$ 
: degradation rate of spliced RNA&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-2-define-the-generating-function-hahahugoshortcode22s79hbhb&#34;&gt;Step 2: Define the generating function  $G(u_u, u_s, t)$ 
&lt;/h2&gt;

$$
G(u_u, u_s, t) := \sum_{x_u=0}^{\infty} \sum_{x_s=0}^{\infty} P(x_u, x_s, t)(u_u + 1)^{x_u}(u_s + 1)^{x_s} \qquad (10)
$$


&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Using  $(u_u + 1)^{x_u}$ 
 instead of  $u_u^{x_u}$ 
 is a common shift to simplify derivatives later, but you can equivalently define with  $u_u^{x_u}$ 
.&lt;/p&gt;
&lt;h2 id=&#34;step-3-take-time-derivative-of-hahahugoshortcode22s84hbhb&#34;&gt;Step 3: Take time derivative of  $G$ 
&lt;/h2&gt;
&lt;p&gt;Using linearity of sums and derivatives:&lt;/p&gt;

$$
\frac{\partial G}{\partial t} = \sum_{x_u=0}^{\infty} \sum_{x_s=0}^{\infty} \frac{\partial P(x_u, x_s, t)}{\partial t} (u_u + 1)^{x_u}(u_s + 1)^{x_s}
$$


&lt;p&gt;Substitute the CME expression:&lt;/p&gt;

$$
= \sum_{x_u,x_s} [\alpha(P(x_u - 1, x_s, t) - P(x_u, x_s, t)) + \beta((x_u + 1)P(x_u + 1, x_s - 1, t) - x_u P(x_u, x_s, t)) + \gamma((x_s + 1)P(x_u, x_s + 1, t) - x_s P(x_u, x_s, t))](u_u + 1)^{x_u}(u_s + 1)^{x_s}
$$


&lt;h2 id=&#34;step-4-evaluate-each-term-separately&#34;&gt;Step 4: Evaluate each term separately&lt;/h2&gt;
&lt;h3 id=&#34;term-1-transcription&#34;&gt;Term 1: Transcription&lt;/h3&gt;

$$
\sum_{x_u,x_s} \alpha(P(x_u - 1, x_s) - P(x_u, x_s))(u_u + 1)^{x_u}(u_s + 1)^{x_s}
$$


&lt;p&gt;Rewrite the first sum by shifting  $x_u \to x_u + 1$ 
 in the first part:&lt;/p&gt;

$$
\sum_{x_u=0}^{\infty} P(x_u - 1, x_s)(u_u + 1)^{x_u} = \sum_{x_u&#39;=-1}^{\infty} P(x_u&#39;, x_s)(u_u + 1)^{x_u&#39; + 1}
$$


&lt;p&gt;Since  $P(x_u&#39;, x_s) = 0$ 
 for  $x_u&#39; &lt; 0$ 
, this becomes:&lt;/p&gt;

$$
(u_u + 1) \sum_{x_u&#39;=0}^{\infty} P(x_u&#39;, x_s)(u_u + 1)^{x_u&#39;}
$$


&lt;p&gt;Therefore,&lt;/p&gt;

$$
\sum_{x_u,x_s} \alpha(P(x_u - 1, x_s) - P(x_u, x_s))(u_u + 1)^{x_u}(u_s + 1)^{x_s} = \alpha((u_u + 1)G - G) = \alpha u_u G
$$


&lt;h3 id=&#34;term-2-splicing&#34;&gt;Term 2: Splicing&lt;/h3&gt;

$$
\sum_{x_u,x_s} \beta((x_u + 1)P(x_u + 1, x_s - 1) - x_u P(x_u, x_s))(u_u + 1)^{x_u}(u_s + 1)^{x_s}
$$


&lt;p&gt;Split into two sums:&lt;/p&gt;

$$
S_1 = \beta \sum_{x_u,x_s} (x_u + 1)P(x_u + 1, x_s - 1)(u_u + 1)^{x_u}(u_s + 1)^{x_s}
$$



$$
S_2 = -\beta \sum_{x_u,x_s} x_u P(x_u, x_s)(u_u + 1)^{x_u}(u_s + 1)^{x_s}
$$


&lt;p&gt;Change indices in  $S_1$ 
:&lt;/p&gt;
&lt;p&gt;Let  $x_u&#39; = x_u + 1$ 
,  $x_s&#39; = x_s - 1$ 
, so  $x_u = x_u&#39; - 1$ 
,  $x_s = x_s&#39; + 1$ 
&lt;/p&gt;
&lt;p&gt;Then,&lt;/p&gt;

$$
S_1 = \beta \sum_{x_u&#39;=1}^{\infty} \sum_{x_s&#39;=0}^{\infty} x_u&#39; P(x_u&#39;, x_s&#39;)(u_u + 1)^{x_u&#39; - 1}(u_s + 1)^{x_s&#39; + 1}
$$


&lt;p&gt;Rearranged:&lt;a id=&#34;why_sum_is_equivalence&#34;&gt;&lt;/a&gt;
(see &lt;a href=&#34;#b2-why-double-sum-equivalence-holds-in-term-2-of-step4-in-b1&#34;&gt;note&lt;/a&gt;)&lt;/p&gt;

$$
= \beta(u_s + 1) \sum_{x_u&#39;,x_s&#39;} x_u&#39; P(x_u&#39;, x_s&#39;)(u_u + 1)^{x_u&#39; - 1}(u_s + 1)^{x_s&#39;}
$$


&lt;p&gt; $S_2$ 
 is:&lt;/p&gt;

$$
S_2 = -\beta \sum_{x_u,x_s} x_u P(x_u, x_s)(u_u + 1)^{x_u}(u_s + 1)^{x_s}
$$


&lt;p&gt;Now recognize:&lt;/p&gt;

$$
\frac{\partial G}{\partial u_u} = \sum_{x_u,x_s} x_u P(x_u, x_s)(u_u + 1)^{x_u - 1}(u_s + 1)^{x_s}
$$


&lt;p&gt;So:&lt;/p&gt;

$$
S_1 = \beta(u_s + 1) \frac{\partial G}{\partial u_u}
$$


&lt;p&gt;and&lt;/p&gt;

$$
S_2 = -\beta(u_u + 1) \frac{\partial G}{\partial u_u}
$$


&lt;p&gt;Putting together:&lt;/p&gt;

$$
\text{Splicing term} = \beta((u_s + 1) - (u_u + 1)) \frac{\partial G}{\partial u_u} = \beta(u_s - u_u) \frac{\partial G}{\partial u_u}
$$


&lt;h3 id=&#34;term-3-degradation&#34;&gt;Term 3: Degradation&lt;/h3&gt;

$$
\sum_{x_u,x_s} \gamma((x_s + 1)P(x_u, x_s + 1) - x_s P(x_u, x_s))(u_u + 1)^{x_u}(u_s + 1)^{x_s}
$$


&lt;p&gt;Split into:&lt;/p&gt;

$$
S_3 = \gamma \sum_{x_u,x_s} (x_s + 1)P(x_u, x_s + 1)(u_u + 1)^{x_u}(u_s + 1)^{x_s}
$$



$$
S_4 = -\gamma \sum_{x_u,x_s} x_s P(x_u, x_s)(u_u + 1)^{x_u}(u_s + 1)^{x_s}
$$


&lt;p&gt;Shift indices in  $S_3$ 
:&lt;/p&gt;
&lt;p&gt;Let  $x_s&#39; = x_s + 1 \Rightarrow x_s = x_s&#39; - 1$ 
:&lt;/p&gt;

$$
S_3 = \gamma \sum_{x_u=0}^{\infty} \sum_{x_s&#39;=1}^{\infty} x_s&#39; P(x_u, x_s&#39;)(u_u + 1)^{x_u}(u_s + 1)^{x_s&#39; - 1}
$$



$$
= \gamma(u_s + 1)^{-1} \sum_{x_u,x_s&#39;} x_s&#39; P(x_u, x_s&#39;)(u_u + 1)^{x_u}(u_s + 1)^{x_s&#39;}
$$


&lt;p&gt;Recognize&lt;/p&gt;

$$
\frac{\partial G}{\partial u_s} = \sum_{x_u,x_s} x_s P(x_u, x_s)(u_u + 1)^{x_u}(u_s + 1)^{x_s - 1}
$$


&lt;p&gt;So,&lt;/p&gt;

$$
S_3 = \gamma(u_s + 1) \frac{\partial G}{\partial u_s}
$$


&lt;p&gt;and&lt;/p&gt;

$$
S_4 = -\gamma(u_s + 1) \frac{\partial G}{\partial u_s}
$$


&lt;p&gt;Wait, let me recalculate  $S_4$ 
:&lt;/p&gt;

$$
S_4 = -\gamma \sum_{x_u,x_s} x_s P(x_u, x_s)(u_u + 1)^{x_u}(u_s + 1)^{x_s}
$$


&lt;p&gt;This equals:&lt;/p&gt;

$$
S_4 = -\gamma(u_s + 1) \sum_{x_u,x_s} x_s P(x_u, x_s)(u_u + 1)^{x_u}(u_s + 1)^{x_s - 1} = -\gamma(u_s + 1) \frac{\partial G}{\partial u_s}
$$


&lt;p&gt;Therefore, the degradation term is:&lt;/p&gt;

$$
\text{Degradation term} = S_3 + S_4 = \gamma(u_s + 1) \frac{\partial G}{\partial u_s} - \gamma(u_s + 1) \frac{\partial G}{\partial u_s} = 0
$$


&lt;p&gt;Actually, let me recalculate this more carefully. We have:&lt;/p&gt;

$$
S_3 = \gamma \sum_{x_u,x_s} (x_s + 1)P(x_u, x_s + 1)(u_u + 1)^{x_u}(u_s + 1)^{x_s}
$$


&lt;p&gt;With the substitution  $x_s&#39; = x_s + 1$ 
, we get  $x_s = x_s&#39; - 1$ 
 and:&lt;/p&gt;

$$
S_3 = \gamma \sum_{x_u=0}^{\infty} \sum_{x_s&#39;=1}^{\infty} x_s&#39; P(x_u, x_s&#39;)(u_u + 1)^{x_u}(u_s + 1)^{x_s&#39; - 1}
$$



$$
= \frac{\gamma}{u_s + 1} \sum_{x_u,x_s&#39;} x_s&#39; P(x_u, x_s&#39;)(u_u + 1)^{x_u}(u_s + 1)^{x_s&#39;}
$$



$$
= \frac{\gamma}{u_s + 1} \cdot (u_s + 1) \frac{\partial G}{\partial u_s} = \gamma \frac{\partial G}{\partial u_s}
$$


&lt;p&gt;And:&lt;/p&gt;

$$
S_4 = -\gamma(u_s + 1) \frac{\partial G}{\partial u_s}
$$


&lt;p&gt;So the degradation term is:&lt;/p&gt;

$$
\text{Degradation term} = \gamma \frac{\partial G}{\partial u_s} - \gamma(u_s + 1) \frac{\partial G}{\partial u_s} = -\gamma u_s \frac{\partial G}{\partial u_s}
$$


&lt;h2 id=&#34;final-result&#34;&gt;Final Result&lt;/h2&gt;
&lt;p&gt;Combining all terms:&lt;/p&gt;

$$
\frac{\partial G}{\partial t} = \alpha u_u G + \beta(u_s - u_u) \frac{\partial G}{\partial u_u} - \gamma u_s \frac{\partial G}{\partial u_s} \qquad (11)
$$


&lt;h1 id=&#34;b2-why-double-sum-equivalence-holds-in-term-2-of-step4-in-b1&#34;&gt;B.2) Why Double Sum Equivalence Holds &lt;a href=&#34;#why_sum_is_equivalence&#34;&gt;in Term 2 of Step4 in B.1)&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;This equivalence depends on what values the indices range over and how the function being summed behaves.&lt;/p&gt;
&lt;h2 id=&#34;1-notation&#34;&gt;1. Notation&lt;/h2&gt;
&lt;p&gt;When we write:&lt;/p&gt;
 $$\sum_{x_u&#39;, x_s&#39;} f(x_u&#39;, x_s&#39;)$$ 

&lt;p&gt;This is shorthand for:&lt;/p&gt;
 $$\sum_{x_u&#39; = 0}^{\infty} \sum_{x_s&#39; = 0}^{\infty} f(x_u&#39;, x_s&#39;)$$ 

&lt;p&gt;That is, summing over all nonnegative integer pairs  $(x_u&#39;, x_s&#39;) \in \mathbb{N}_0 \times \mathbb{N}_0$ 
.&lt;/p&gt;
&lt;h2 id=&#34;2-why-it-matters-in-the-derivation&#34;&gt;2. Why it matters in the derivation&lt;/h2&gt;
&lt;p&gt;In your original sum:&lt;/p&gt;
 $$\sum_{x_u&#39; = 1}^{\infty} \sum_{x_s&#39; = 0}^{\infty} x_u&#39; P(x_u&#39;, x_s&#39;) (u_u + 1)^{x_u&#39; - 1} (u_s + 1)^{x_s&#39;}$$ 

&lt;p&gt;The lower bound of  $x_u&#39;$ 
 is 1 because we performed a change of variables from  $x_u = x_u&#39; - 1$ 
, and in the original sum,  $x_u \geq 0$ 
, which implies  $x_u&#39; \geq 1$ 
.&lt;/p&gt;
&lt;p&gt;So the double sum with bounds:&lt;/p&gt;
 $$\sum_{x_u&#39; = 1}^{\infty} \sum_{x_s&#39; = 0}^{\infty}$$ 

&lt;p&gt;is not exactly the same as:&lt;/p&gt;
 $$\sum_{x_u&#39; = 0}^{\infty} \sum_{x_s&#39; = 0}^{\infty}$$ 

&lt;p&gt;But if we define:&lt;/p&gt;
 $$\sum_{x_u&#39;, x_s&#39;} := \sum_{x_u&#39; = 0}^{\infty} \sum_{x_s&#39; = 0}^{\infty}$$ 

&lt;p&gt;then in your derivation, the support of  $P(x_u&#39;, x_s&#39;)$ 
 makes this safe because:&lt;/p&gt;
 $$x_u&#39; P(x_u&#39;, x_s&#39;) = 0 \text{ when } x_u&#39; = 0$$ 

&lt;p&gt;since the factor is 0.&lt;/p&gt;
&lt;p&gt;So extending the lower limit to 0 adds no contribution to the sum.&lt;/p&gt;
&lt;h2 id=&#34;-conclusion&#34;&gt;‚úÖ Conclusion&lt;/h2&gt;
&lt;p&gt;The expressions:&lt;/p&gt;
 $$\sum_{x_u&#39; = 1}^{\infty} \sum_{x_s&#39; = 0}^{\infty} x_u&#39; P(x_u&#39;, x_s&#39;) \cdots$$ 

&lt;p&gt;and&lt;/p&gt;
 $$\sum_{x_u&#39; = 0}^{\infty} \sum_{x_s&#39; = 0}^{\infty} x_u&#39; P(x_u&#39;, x_s&#39;) \cdots$$ 

&lt;p&gt;are equal because when  $x_u&#39; = 0$ 
, the term is 0.&lt;/p&gt;
&lt;p&gt;Hence, we can write:&lt;/p&gt;
 $$\sum_{x_u&#39;, x_s&#39;} := \sum_{x_u&#39; = 0}^{\infty} \sum_{x_s&#39; = 0}^{\infty}$$ 

&lt;p&gt;without affecting the value of the sum.&lt;/p&gt;
&lt;h1 id=&#34;b3-solve-pde-via-method-of-characteristics&#34;&gt;B.3) Solve PDE via Method of Characteristics&lt;/h1&gt;
&lt;p&gt;We start with the PDE derived from the chemical master equation (CME) for a stochastic model of unspliced (u) and spliced (s) RNA:&lt;/p&gt;
 $$\frac{\partial G}{\partial t} = \alpha u_u G + \beta(u_s - u_u)\frac{\partial G}{\partial u_u} - \gamma u_s \frac{\partial G}{\partial u_s}$$ 

&lt;p&gt;This is a first-order linear PDE in 3 variables:  $u_u, u_s, t$ 
.&lt;/p&gt;
&lt;p&gt;To solve this, we apply the method of characteristics, which reduces a PDE to a system of ODEs along special curves (characteristics) in the domain  $(u_u, u_s, t)$ 
. The idea is to track how  $G$ 
 changes along these curves as we change a parameter  $s$ 
 (which can be thought of like an artificial time).&lt;/p&gt;
&lt;h2 id=&#34;-step-1-define-characteristic-curves&#34;&gt;üìå Step 1: Define Characteristic Curves&lt;/h2&gt;
&lt;p&gt;We introduce  $s$ 
 as a parameter along a characteristic curve and define:&lt;/p&gt;
 $$u_u = u_u(s)$$ 

 $$u_s = u_s(s)$$ 

 $$t = t(s)$$ 

 $$G = G(u_u(s), u_s(s), t(s))$$ 

&lt;p&gt;Then the total derivative of  $G$ 
 along the curve is:&lt;/p&gt;
 $$\frac{dG}{ds} = \frac{\partial G}{\partial u_u}\frac{du_u}{ds} + \frac{\partial G}{\partial u_s}\frac{du_s}{ds} + \frac{\partial G}{\partial t}\frac{dt}{ds}$$ 

&lt;p&gt;Now, we substitute the PDE into this expression. From the PDE:&lt;/p&gt;
 $$\frac{\partial G}{\partial t} = \alpha u_u G + \beta(u_s - u_u)\frac{\partial G}{\partial u_u} - \gamma u_s \frac{\partial G}{\partial u_s}$$ 

&lt;p&gt;Plugging this into the total derivative:&lt;/p&gt;
 $$\frac{dG}{ds} = \frac{\partial G}{\partial u_u}\frac{du_u}{ds} + \frac{\partial G}{\partial u_s}\frac{du_s}{ds} + \left[\alpha u_u G + \beta(u_s - u_u)\frac{\partial G}{\partial u_u} - \gamma u_s \frac{\partial G}{\partial u_s}\right]\frac{dt}{ds}$$ 

&lt;p&gt;Now, &lt;strong&gt;choose  $\frac{dt}{ds} = 1$ 
&lt;/strong&gt;. This simplifies the expression because now  $t = s$ 
, and we can reduce the 3-variable PDE into a system of ODEs in  $s$ 
.&lt;/p&gt;
&lt;h2 id=&#34;-step-2-match-terms&#34;&gt;‚úÖ Step 2: Match Terms&lt;/h2&gt;
&lt;p&gt;To make the right-hand side cancel cleanly, we group terms:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Coefficient of&lt;/strong&gt;  $\frac{\partial G}{\partial u_u}$ 
:&lt;/p&gt;
 $$\frac{du_u}{ds} + \beta(u_s - u_u)$$ 

&lt;p&gt;&lt;strong&gt;Coefficient of&lt;/strong&gt;  $\frac{\partial G}{\partial u_s}$ 
:&lt;/p&gt;
 $$\frac{du_s}{ds} - \gamma u_s$$ 

&lt;p&gt;To cancel the dependence on  $\frac{\partial G}{\partial u_u}$ 
 and  $\frac{\partial G}{\partial u_s}$ 
, we set these to zero, yielding:&lt;/p&gt;
 $$\frac{du_u}{ds} = \beta(u_s - u_u), \quad \frac{du_s}{ds} = -\gamma u_s$$ 

&lt;p&gt;Then the remaining term becomes:&lt;/p&gt;
 $$\frac{dG}{ds} = \alpha u_u G$$ 

&lt;p&gt;Now we&amp;rsquo;ve reduced the PDE into this system of ODEs:&lt;/p&gt;
 $$\begin{align}
\frac{du_s}{ds} &amp;= -\gamma u_s \\
\frac{du_u}{ds} &amp;= \beta(u_s - u_u) \\
\frac{dG}{ds} &amp;= \alpha u_u G
\end{align}$$ 

&lt;p&gt;These are much easier to solve analytically or numerically.&lt;/p&gt;
&lt;h1 id=&#34;b4-legitimacy-to-choose-hahahugoshortcode22s176hbhb-in-b3&#34;&gt;B.4) Legitimacy to choose  $\frac{dt}{ds} = 1$ 
 in B.3)&lt;/h1&gt;
&lt;p&gt;We choose  $\frac{dt}{ds} = 1$ 
 in the method of characteristics because it simplifies the partial differential equation (PDE) to a more tractable set of ordinary differential equations (ODEs) ‚Äî and this choice is completely valid and standard in this method. Let me explain why:&lt;/p&gt;
&lt;h2 id=&#34;-what-does-hahahugoshortcode22s178hbhb-mean&#34;&gt;‚úÖ What Does  $\frac{dt}{ds} = 1$ 
 Mean?&lt;/h2&gt;
&lt;p&gt;In the method of characteristics, you introduce a new parameter  $s$ 
 that traces out a path (or characteristic curve) in the space of independent variables ‚Äî here,  $(u_u, u_s, t)$ 
. Along this path:&lt;/p&gt;
 $$\frac{dG}{ds} = \frac{\partial G}{\partial u_u} \frac{du_u}{ds} + \frac{\partial G}{\partial u_s} \frac{du_s}{ds} + \frac{\partial G}{\partial t} \frac{dt}{ds}$$ 

&lt;p&gt;So  $\frac{dt}{ds}$ 
 tells you how &amp;ldquo;fast&amp;rdquo; you&amp;rsquo;re moving in the time direction along the characteristic curve.&lt;/p&gt;
&lt;p&gt;Now, if you choose:&lt;/p&gt;
 $$\frac{dt}{ds} = 1 \Rightarrow t = s$$ 

&lt;p&gt;you&amp;rsquo;re saying: &amp;ldquo;Let the parameter along the path simply equal time.&amp;rdquo; This simplifies the math without changing the problem.&lt;/p&gt;
&lt;h2 id=&#34;-why-is-this-legitimate&#34;&gt;‚úÖ Why Is This Legitimate?&lt;/h2&gt;
&lt;p&gt;Because in the method of characteristics,  $s$ 
 is a dummy variable. You&amp;rsquo;re free to choose how it relates to the original coordinates, as long as it parametrizes a valid path. The PDE solution is determined by the behavior along these characteristic curves, and the parameterization does not affect the final solution.&lt;/p&gt;
&lt;p&gt;Choosing  $\frac{dt}{ds} = 1$ 
:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;simplifies the system (fewer variables)&lt;/li&gt;
&lt;li&gt;allows you to think of  $s$ 
 as time&lt;/li&gt;
&lt;li&gt;turns the original PDE into a solvable system of ODEs&lt;/li&gt;
&lt;li&gt;does not change the physics or solution of the underlying system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It&amp;rsquo;s not a constraint imposed by the model ‚Äî it&amp;rsquo;s a strategic mathematical choice to simplify the derivation.&lt;/p&gt;
&lt;h2 id=&#34;-alternative-choices&#34;&gt;üö© Alternative Choices?&lt;/h2&gt;
&lt;p&gt;Yes ‚Äî you could, in principle, choose something else (e.g.  $\frac{dt}{ds} = \gamma$ 
, or make  $s = -t$ 
), but then the resulting ODEs are messier. Since the method is agnostic to how you parametrize the path, you&amp;rsquo;re free to choose the one that leads to the simplest math.&lt;/p&gt;
&lt;h2 id=&#34;-in-summary&#34;&gt;üîÅ In Summary&lt;/h2&gt;
&lt;p&gt;Choosing  $\frac{dt}{ds} = 1$ 
 is valid because:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The method of characteristics allows any parameterization.&lt;/li&gt;
&lt;li&gt;This choice makes the equations easier to solve.&lt;/li&gt;
&lt;li&gt;The physics or stochastic model (e.g. CME) remains unchanged.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;c-derive-log-generating-function&#34;&gt;C) Derive log-generating function &lt;a id=&#34;Derive-log-generating-function&#34;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Below derive the log-generating function first introduced &lt;a href=&#34;#log-generating-function-first-introduced&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;1-setup-use-the-method-of-characteristics&#34;&gt;1. Setup: Use the Method of Characteristics&lt;/h2&gt;
&lt;p&gt;We rewrite the PDE:&lt;/p&gt;
 $$\frac{\partial G}{\partial t} = \alpha u_u G + \beta(u_s - u_u)\frac{\partial G}{\partial u_u} - \gamma u_s \frac{\partial G}{\partial u_s}$$ 

&lt;p&gt;This is a linear PDE in  $G(u_u, u_s, t)$ 
, and we apply the method of characteristics.&lt;/p&gt;
&lt;p&gt;Let  $s$ 
 be the parameter along characteristic curves. Then we solve the system:&lt;/p&gt;
 $$\frac{dt}{ds} = 1$$ 

 $$\frac{du_u}{ds} = \beta(u_s - u_u)$$ 

 $$\frac{du_s}{ds} = -\gamma u_s$$ 

 $$\frac{dG}{ds} = \alpha u_u G$$ 

&lt;h2 id=&#34;2-solve-the-ode-for-hahahugoshortcode22s197hbhb&#34;&gt;2. Solve the ODE for  $u_s(s)$ 
&lt;/h2&gt;
 $$\frac{du_s}{ds} = -\gamma u_s \Rightarrow u_s(s) = u_s(0)e^{-\gamma s}$$ 

&lt;h2 id=&#34;3-plug-into-the-ode-for-hahahugoshortcode22s199hbhb&#34;&gt;3. Plug into the ODE for  $u_u(s)$ 
&lt;/h2&gt;
 $$\frac{du_u}{ds} = \beta(u_s(s) - u_u(s)) = \beta(u_s(0)e^{-\gamma s} - u_u(s))$$ 

&lt;p&gt;This is a linear non-homogeneous ODE:&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s solve using integrating factor:&lt;/p&gt;
&lt;p&gt;Integrating factor:  $\mu(s) = e^{\beta s}$ 
&lt;/p&gt;
&lt;p&gt;Multiply both sides:&lt;/p&gt;
 $$e^{\beta s}\frac{du_u}{ds} + \beta e^{\beta s}u_u(s) = \beta u_s(0)e^{(\beta - \gamma)s}$$ 

 $$\frac{d}{ds}(e^{\beta s}u_u(s)) = \beta u_s(0)e^{(\beta - \gamma)s}$$ 

&lt;p&gt;Integrate both sides:&lt;/p&gt;
 $$e^{\beta s}u_u(s) = \frac{\beta u_s(0)}{\beta - \gamma}e^{(\beta - \gamma)s} + C$$ 

&lt;p&gt;Now divide both sides:&lt;/p&gt;
 $$u_u(s) = \frac{\beta u_s(0)}{\beta - \gamma}e^{-\gamma s} + Ce^{-\beta s}$$ 

&lt;p&gt;Apply initial condition  $u_u(0)$ 
 to solve for  $C$ 
:&lt;/p&gt;
 $$u_u(0) = \frac{\beta u_s(0)}{\beta - \gamma} + C \Rightarrow C = u_u(0) - \frac{\beta u_s(0)}{\beta - \gamma}$$ 

&lt;p&gt;So we now have:&lt;/p&gt;
 $$u_u(s) = \frac{\beta u_s(0)}{\beta - \gamma}e^{-\gamma s} + \left(u_u(0) - \frac{\beta u_s(0)}{\beta - \gamma}\right)e^{-\beta s}$$ 

&lt;h2 id=&#34;4-define-hahahugoshortcode22s210hbhb&#34;&gt;4. Define  $U_1(u_u, u_s, s)$ 
&lt;/h2&gt;
&lt;p&gt;Recall that in the characteristic solution for  $G$ 
, we solve:&lt;/p&gt;
 $$\frac{dG}{ds} = \alpha u_u(s)G \Rightarrow G(s) = \exp\left(\int_0^t \alpha(t-s)u_u(s)ds\right)$$ 

&lt;p&gt;Define  $U_1(u_u, u_s, s) = u_u(s)$ 
. So:&lt;/p&gt;
 $$U_1(u_u, u_s, s) = \frac{\beta u_s}{\beta - \gamma}e^{-\gamma s} + \left(u_u - \frac{\beta u_s}{\beta - \gamma}\right)e^{-\beta s}$$ 

&lt;p&gt;This is exactly the expression you provided.&lt;/p&gt;
&lt;h2 id=&#34;5-compute-hahahugoshortcode22s215hbhb&#34;&gt;5. Compute  $f(u_u, u_s, t) = \ln G$ 
&lt;/h2&gt;
&lt;p&gt;Now integrate:&lt;/p&gt;
 $$\ln G(u_u, u_s, t) = \int_0^t \alpha(t-s)U_1(u_u, u_s, s) \, ds$$ 

</description>
    </item>
    
    <item>
      <title>üß¨ Velocity reasoning and discussion</title>
      <link>http://localhost:1313/post/11.velocity_reasoning/</link>
      <pubDate>Fri, 04 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/11.velocity_reasoning/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ CCA reasoning and integration discussion</title>
      <link>http://localhost:1313/post/10.cca_reasoning/</link>
      <pubDate>Thu, 03 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/10.cca_reasoning/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ Clinical relevance evaluation in PRCC</title>
      <link>http://localhost:1313/post/08.clinical_relevance/</link>
      <pubDate>Mon, 31 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/08.clinical_relevance/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ Expressive cord diagram in PRCC</title>
      <link>http://localhost:1313/post/07.chord_diagram/</link>
      <pubDate>Sun, 30 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/07.chord_diagram/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ Determine whether it‚Äôs noise or true stem like cells in PRCC</title>
      <link>http://localhost:1313/post/06.noise_or_true_stem_cell/</link>
      <pubDate>Sat, 29 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/06.noise_or_true_stem_cell/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ quantify xenograft and host gene expression from the same sample</title>
      <link>http://localhost:1313/post/05.xensoft_caki_paper/</link>
      <pubDate>Fri, 28 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/05.xensoft_caki_paper/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ counteract treatment-specific background in differential expressed gene analysis (huangcong paper)</title>
      <link>http://localhost:1313/post/04.huangcong_oncogene/</link>
      <pubDate>Thu, 27 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/04.huangcong_oncogene/</guid>
      <description>&lt;p&gt;will be composed soon!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>üß¨ Quantify hERV and transgenes from Bulk-RNAseq</title>
      <link>http://localhost:1313/post/01.bulkrnaseq_allow_herv_quantification/</link>
      <pubDate>Mon, 24 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/01.bulkrnaseq_allow_herv_quantification/</guid>
      <description>&lt;h2 id=&#34;github-source-code&#34;&gt;Github source code&lt;/h2&gt;
&lt;p&gt;Please see source codes in &lt;a href=&#34;https://github.com/jliu678/herv_project_siyi/tree/main&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github&lt;/a&gt; that can be deploied in Cloud Cluster Computational platform and local desktops, and allows for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;batch computaion with tunable batch size&lt;/li&gt;
&lt;li&gt;automatic environment setting up&lt;/li&gt;
&lt;li&gt;file preprocessing&lt;/li&gt;
&lt;li&gt;QC&lt;/li&gt;
&lt;li&gt;index buidling, alignment and feature counting by either &lt;code&gt;subread&lt;/code&gt; or &lt;code&gt;salmon&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The github repo also contains &lt;a href=&#34;https://github.com/jliu678/herv_project_siyi/tree/main/example_usage&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;usage examples using &lt;code&gt;SLURM&lt;/code&gt; or &lt;code&gt;LSF&lt;/code&gt; job scheduler&lt;/a&gt; and &lt;a href=&#34;https://github.com/jliu678/herv_project_siyi/tree/main/utils&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;handy utility tools&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;what-are-hervs-and-transgenes&#34;&gt;What are hERVs and transgenes&lt;/h2&gt;
&lt;p&gt;Human Endogenous Retroviruses (hERVs) are ancient viral sequences embedded in the human genome. The roles of hERVs in gene regulation, immunity, development and cancer are under intense research. Transgenes including GFP, CRE, Luciferase, rtTA/Tet-On/Tet-Off and epitopically expressed genes are common targets to be quantified in sample from transgenic mouse models.&lt;/p&gt;
&lt;h2 id=&#34;how-to-quantify-them&#34;&gt;How to quantify them&lt;/h2&gt;
&lt;p&gt;To quantify them, we of course need modify fasta and gtf files to include the their sequencing and annotation. Also, because their sequencing reads are frequently repetitive or overlaping with host genome, we need a feature quantification algorithm to handle multimapping commonly seen for HERV and transgenes.&lt;/p&gt;
&lt;h3 id=&#34;their-fasta-and-gtf&#34;&gt;Their fasta and gtf&lt;/h3&gt;
&lt;p&gt;The transgenes can be included as chromosomes in fasta as below&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt; EGFP
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCG
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCT
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GACCCTGAAGTTCATCTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACC
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCA
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTA
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGC
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACA
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAA
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGC
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACG
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGA
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CGAGCTGTACAAGTAA
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The transgenes are formated as below in gtf&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;EGFP    self    exon    &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;       &lt;span class=&#34;m&#34;&gt;720&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;500&lt;/span&gt;     +       .       gene_id &lt;span class=&#34;s2&#34;&gt;&amp;#34;custom_3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; gene_name &lt;span class=&#34;s2&#34;&gt;&amp;#34;EGFP&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Cre     self    exon    &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;       &lt;span class=&#34;m&#34;&gt;1023&lt;/span&gt;    &lt;span class=&#34;m&#34;&gt;500&lt;/span&gt;     +       .       gene_id &lt;span class=&#34;s2&#34;&gt;&amp;#34;custom_4&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; gene_name &lt;span class=&#34;s2&#34;&gt;&amp;#34;Cre&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ERT2    self    exon    &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;       &lt;span class=&#34;m&#34;&gt;931&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;500&lt;/span&gt;     +       .       gene_id &lt;span class=&#34;s2&#34;&gt;&amp;#34;custom_5&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; gene_name &lt;span class=&#34;s2&#34;&gt;&amp;#34;ERT2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The hERV sequences are already in reference genome, but their gtf need be added as below. We will talk about &lt;strong&gt;&lt;a href=&#34;willbecomposedsoon&#34;&gt;how to generate the hERV gtf matching the latest reference genome in another blog&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chr10   RepeatMasker    exon    &lt;span class=&#34;m&#34;&gt;3083835&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3085549&lt;/span&gt; 4.5     -       .       gene_id &lt;span class=&#34;s2&#34;&gt;&amp;#34;RepMasker_dc1fbd39-e43b-4ac4-90ef-1da20b1d6249&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; gene_name &lt;span class=&#34;s2&#34;&gt;&amp;#34;chr10:LTR/ERVL-MaLR:ORR1A0:3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chr10   RepeatMasker    exon    &lt;span class=&#34;m&#34;&gt;3114480&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3115385&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;       -       .       gene_id &lt;span class=&#34;s2&#34;&gt;&amp;#34;RepMasker_c49d8024-0b45-46a9-bcaa-c44f7a305a03&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; gene_name &lt;span class=&#34;s2&#34;&gt;&amp;#34;chr10:LTR/ERVK:RLTR13F:8&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chr10   RepeatMasker    exon    &lt;span class=&#34;m&#34;&gt;3122665&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3123530&lt;/span&gt; 13.8    +       .       gene_id &lt;span class=&#34;s2&#34;&gt;&amp;#34;RepMasker_5154950a-1e53-4528-a5cf-37d121e3e1a4&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; gene_name &lt;span class=&#34;s2&#34;&gt;&amp;#34;chr10:LTR/ERVK:RLTR13D6:11&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chr11   RepeatMasker    exon    &lt;span class=&#34;m&#34;&gt;3055489&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3061982&lt;/span&gt; 25.9    +       .       gene_id &lt;span class=&#34;s2&#34;&gt;&amp;#34;RepMasker_f6a34047-357d-4ed5-9744-eaf4c862be26&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; gene_name &lt;span class=&#34;s2&#34;&gt;&amp;#34;chr11:LTR/ERVK:IAPLTR3-int:1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chr11   RepeatMasker    exon    &lt;span class=&#34;m&#34;&gt;3139464&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3140302&lt;/span&gt; 11.7    +       .       gene_id &lt;span class=&#34;s2&#34;&gt;&amp;#34;RepMasker_ad8b23ab-de54-4f73-be4d-f8405ad13e66&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; gene_name &lt;span class=&#34;s2&#34;&gt;&amp;#34;chr11:LTR/ERVK:RLTR33:3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chr11   RepeatMasker    exon    &lt;span class=&#34;m&#34;&gt;3410867&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3413285&lt;/span&gt; 16.9    +       .       gene_id &lt;span class=&#34;s2&#34;&gt;&amp;#34;RepMasker_ec06076e-c8d0-4a94-8cfa-358f352bb1e8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; gene_name &lt;span class=&#34;s2&#34;&gt;&amp;#34;chr11:LTR/ERV1:RLTR14-int:7&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chr12   RepeatMasker    exon    &lt;span class=&#34;m&#34;&gt;3052672&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3059141&lt;/span&gt; 1.6     +       .       gene_id &lt;span class=&#34;s2&#34;&gt;&amp;#34;RepMasker_8ea0db28-2cd0-4d7e-b151-b5b6480ee320&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; gene_name &lt;span class=&#34;s2&#34;&gt;&amp;#34;chr12:LTR/ERVK:IAPEz-int:1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chr12   RepeatMasker    exon    &lt;span class=&#34;m&#34;&gt;3065049&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3072337&lt;/span&gt; 27.3    -       .       gene_id &lt;span class=&#34;s2&#34;&gt;&amp;#34;RepMasker_f3379b4a-cdfa-4b24-a4c9-5dacbdaf004c&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; gene_name &lt;span class=&#34;s2&#34;&gt;&amp;#34;chr12:LTR/ERV1:MMERGLN-int:2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chr12   RepeatMasker    exon    &lt;span class=&#34;m&#34;&gt;3084084&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3084938&lt;/span&gt; 5.8     -       .       gene_id &lt;span class=&#34;s2&#34;&gt;&amp;#34;RepMasker_062a5737-d991-4220-9648-33c43ad467a2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; gene_name &lt;span class=&#34;s2&#34;&gt;&amp;#34;chr12:LTR/ERVK:IAPEz-int:4&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;how-tools-deal-with-multimapping&#34;&gt;How tools deal with multimapping&lt;/h3&gt;
&lt;p&gt;Below list common feature count/qunatification tools emphasizing on the core algorithms they wrapped to deal with multimapping. &lt;a href=&#34;https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-017-4002-1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;These common tools have similar quantification accuracy&lt;/a&gt;.&lt;/p&gt;














&lt;table class=&#34;table-auto w-full&#34;&gt;
  
    
    
    &lt;thead&gt;
      &lt;tr&gt;  &lt;th class=&#34;border-b dark:border-slate-600 font-medium p-4 pt-0 pb-3 text-slate-400 dark:text-slate-200 text-left&#34;&gt;Tool&lt;/th&gt;  &lt;th class=&#34;border-b dark:border-slate-600 font-medium p-4 pt-0 pb-3 text-slate-400 dark:text-slate-200 text-left&#34;&gt;Default(option)&lt;/th&gt;  &lt;th class=&#34;border-b dark:border-slate-600 font-medium p-4 pt-0 pb-3 text-slate-400 dark:text-slate-200 text-left&#34;&gt;Core algorithm&lt;/th&gt;  &lt;/tr&gt;
    &lt;/thead&gt;
  
  &lt;tbody&gt;
  
    &lt;tr&gt;
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;HTSeq-count&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;discard(&amp;ndash;nonunique=all/fraction)&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;fraction&lt;/td&gt;
        
      
    &lt;/tr&gt;
  
    &lt;tr&gt;
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;featureCounts&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;discard(-M &amp;ndash;fraction)&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;fraction&lt;/td&gt;
        
      
    &lt;/tr&gt;
  
    &lt;tr&gt;
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;RSEM&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;EM Probabilistic&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;EM&lt;/td&gt;
        
      
    &lt;/tr&gt;
  
    &lt;tr&gt;
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;Salmon&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;EM Probabilistic&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;(Bayesian) EM&lt;/td&gt;
        
      
    &lt;/tr&gt;
  
    &lt;tr&gt;
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;kallisto&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;EM Probabilistic&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;EM&lt;/td&gt;
        
      
    &lt;/tr&gt;
  
    &lt;tr&gt;
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;StringTie&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;EM Probabilistic&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;EM&lt;/td&gt;
        
      
    &lt;/tr&gt;
  
    &lt;tr&gt;
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;TEtranscripts&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;EM Probabilistic&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;EM&lt;/td&gt;
        
      
    &lt;/tr&gt;
  
    &lt;tr&gt;
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;Telescope&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;EM Probabilistic&lt;/td&gt;
        
      
        
          &lt;td data-table-dtype=&#34;text&#34; class=&#34;border-b border-slate-100 dark:border-slate-700 p-4 text-slate-500 dark:text-slate-400&#34;&gt;EM with MAP&lt;/td&gt;
        
      
    &lt;/tr&gt;
  
  &lt;/tbody&gt;
  
    &lt;caption class=&#34;table-caption&#34;&gt;&lt;strong&gt;Table 1. Multimapping options and algorithms of tools&lt;/strong&gt;&lt;/caption&gt;
  
&lt;/table&gt;

&lt;p&gt;They by default may simply discard multimapping reads, which ignores most of hERVs. With carefully specified arguments, they either distribute read counts equally among certian features (fraction) or estimate using EM algorithm.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;why-em-algorithm-for-multimapping&#34;&gt;Why EM algorithm for multimapping&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;Fraction&amp;rdquo; algorithm overlooked how likely the reads can match with reference sequences. The biological prior information, if reasonably exploited, can significantly improve the multimapping quantification. Beatifully, multimapping by nature is similar to the problem of Gaussian Mixtures and EM has been proved to resolve Gaussian Mixture Model (GMM) well.&lt;/p&gt;
&lt;h4 id=&#34;em-is-proved-to-resolve-gmm-well&#34;&gt;EM is proved to resolve GMM well&lt;/h4&gt;
&lt;p&gt;GMM describes a set of data points of which each comes from one of several Gaussian distributions, but we don&amp;rsquo;t know which one. This missing information makes direct estimation (like via maximum likelihood) of the Gaussian parameters hard. EM solve this by iterating below E and M steps until converge:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;E-step (Expectation): Use initiallized parameter to compute the &lt;strong&gt;posterior probability (sounds like bayesian, but it is not in standard EM)&lt;/strong&gt; that each data point was generated by each Gaussian (i.e., the responsibility Œ≥ for each component).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;M-step (Maximization): Update the parameters (œÄ, Œº, œÉ¬≤) by performing &lt;strong&gt;weighted MLE&lt;/strong&gt; using the expected values (responsibilities) computed in the E-step.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;multimapping-is-modeled-as-mixtures-of-distributions-that-account-for-mapping-bias&#34;&gt;Multimapping is modeled as mixtures of distributions that account for mapping bias&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nature.com/articles/nmeth.4197&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Salmon model &lt;/a&gt; describes a set of fragments (seqeuncing reads) of which each fragment &lt;em&gt;f&lt;/em&gt; originates from one of the several transcripts &lt;em&gt;t&lt;/em&gt; at a probability distribution  $P(t \mid f)$ 
, but we don&amp;rsquo;t know which one. Thus EM goes:&lt;/p&gt;
&lt;h5 id=&#34;e-step&#34;&gt;&lt;em&gt;E-Step&lt;/em&gt;&lt;/h5&gt;
&lt;p&gt;For each fragment  $f$ 
 and transcript  $t$ 
:&lt;/p&gt;

$$
P(t \mid f) = \frac{\alpha_t \cdot P(f \mid t)}{\sum_{t&#39;} \alpha_{t&#39;} \cdot P(f \mid t&#39;)}
$$


&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; $\alpha_t$ 
: Current estimate of the relative abundance of transcript  $t$ 
.&lt;/li&gt;
&lt;li&gt; $P(f \mid t)$ 
: Probability of observing fragment  $f$ 
 given transcript  $t$ 
, incorporating bias corrections.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h5 id=&#34;bias-corrections&#34;&gt;&lt;em&gt;Bias Corrections&lt;/em&gt;&lt;/h5&gt;
&lt;p&gt;The fragment-transcript probability is modeled as:&lt;/p&gt;

$$
P(f \mid t) = P_{\text{len}}(l_f \mid t) \cdot P_{\text{pos}}(p_f \mid t) \cdot P_{\text{seq}}(s_f \mid t)
$$


&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; $l_f$ 
: Length of fragment  $f$ 
.&lt;/li&gt;
&lt;li&gt; $p_f$ 
: Position of fragment  $f$ 
 on transcript  $t$ 
.&lt;/li&gt;
&lt;li&gt; $s_f$ 
: Sequence content of fragment  $f$ 
.&lt;/li&gt;
&lt;li&gt; $P_{\text{len}}$ 
: Probability of fragment length, modeling the empirical fragment length distribution.&lt;/li&gt;
&lt;li&gt; $P_{\text{pos}}$ 
: Positional bias model, capturing biases in fragment start locations.&lt;/li&gt;
&lt;li&gt; $P_{\text{seq}}$ 
: Sequence-specific bias model, correcting for nucleotide composition effects.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Importantly, the bias models:  $P_{\text{len}}$ 
,  $P_{\text{pos}}$ 
 and  $P_{\text{seq}}$ 
 are not directly updated by the EM algorithm during transcript abundance estimation. Instead, these bias models are learned once, typically in a preprocessing or auxiliary phase before the EM iterations begin. The EM algorithm then uses the fixed values of these bias models to compute the probability  $P(f \mid t)$ 
 in the E-step.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The only parameters updated by EM are the relative abundances  $\alpha_t$ 
 of the transcripts.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;m-step&#34;&gt;&lt;em&gt;M-Step&lt;/em&gt;&lt;/h5&gt;
&lt;p&gt;Update the abundance estimates:&lt;/p&gt;

$$
\alpha_t = \sum_f P(t \mid f)
$$


&lt;p&gt;Then normalize:&lt;/p&gt;

$$
\sum_t \alpha_t = 1
$$


&lt;hr&gt;
&lt;h2 id=&#34;quantificaiton-using-salmon&#34;&gt;Quantificaiton using Salmon&lt;/h2&gt;
&lt;p&gt;Now we see EM algorithm superior than fraction algorithms in quantifing multimappings since EM&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;is well suitable for estimating parameters in Gaussian Mixture Models, which is similar to the multimapping mathematical model&lt;/li&gt;
&lt;li&gt;takes multimapping mathematical models of mapping probability that accounts for the mapping bias&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We implemented Salmon since it allows both EM and full bayesian EM. We will talk about &lt;a href=&#34;donesoon&#34;&gt;EM (with MLE), EM with MAP and bayesian EM&lt;/a&gt; as well as &lt;a href=&#34;donesoon&#34;&gt;Frequentist vs Bayesian&lt;/a&gt; in other blogs.&lt;/p&gt;
&lt;p&gt;Please see source codes in &lt;a href=&#34;https://github.com/jliu678/herv_project_siyi/tree/main&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github&lt;/a&gt; that can be deploied in Cloud Cluster Computational platform and local desktops, and allows for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;batch computaion with tunable batch size&lt;/li&gt;
&lt;li&gt;automatic environment setting up&lt;/li&gt;
&lt;li&gt;file preprocessing&lt;/li&gt;
&lt;li&gt;QC&lt;/li&gt;
&lt;li&gt;index buidling, alignment and feature counting by either &lt;code&gt;subread&lt;/code&gt; or &lt;code&gt;salmon&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The github repo also contains &lt;a href=&#34;https://github.com/jliu678/herv_project_siyi/tree/main/example_usage&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;usage examples using &lt;code&gt;SLURM&lt;/code&gt; or &lt;code&gt;LSF&lt;/code&gt; job scheduler&lt;/a&gt; and &lt;a href=&#34;https://github.com/jliu678/herv_project_siyi/tree/main/utils&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;handy utility tools&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;excerpt-scripts&#34;&gt;Excerpt scripts&lt;/h3&gt;
&lt;p&gt;Below excerpt scripts call each needed analysis step specified as &lt;code&gt;ANALYSIS_STEP&lt;/code&gt; array, including file preprocessing, index buidling by &lt;code&gt;build_index()&lt;/code&gt;, QC by &lt;code&gt;qc_all()&lt;/code&gt;, alignment by &lt;code&gt;align_all()&lt;/code&gt; if using &lt;code&gt;subread&lt;/code&gt;, and feature counting by &lt;code&gt;count_all()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ANALYSIS_STEP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[@]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  timed_print &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;-ing...&amp;#34;&lt;/span&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; in 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;# for the first 2, do not run if they are in a child/forked process&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			index&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$CHILD&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; build_index&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			convert&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$CHILD&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; get_pairs_all&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			qc&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; qc_all &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			align&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; align_all &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			count&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; count_all &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;esac&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		timed_print &lt;span class=&#34;s2&#34;&gt;&amp;#34;finished &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Some of the core functions in the anylysis are below:&lt;/p&gt;
&lt;h4 id=&#34;build-index&#34;&gt;build index&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;salmon_build_index&lt;span class=&#34;o&#34;&gt;(){&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# supports multiple transcripts&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;# get dir name for the index, which is the transcript names seperated by a hyphen(-)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;# eg. for erv.fa and line.fa, you get: erv-line&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;index_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;salmon/&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;TRANSCRIPTS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[*]%.*&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$OVER_WRITE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -d &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;index_name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;_index&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		timed_print &lt;span class=&#34;s2&#34;&gt;&amp;#34;building salmon index @: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;index_name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;_index&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;c1&#34;&gt;# salmon requires a decoy, which in this case is the entire reference genome&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$OVER_WRITE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -f &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;index_name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;_decoys.txt&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			timed_print &lt;span class=&#34;s2&#34;&gt;&amp;#34;building decoys...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			grep &lt;span class=&#34;s2&#34;&gt;&amp;#34;^&amp;gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;REF_GENOME&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cut -d &lt;span class=&#34;s2&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt; -f &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &amp;gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;index_name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;_decoys.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			sed -i.bak -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/&amp;gt;//g&amp;#39;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;index_name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;_decoys.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;c1&#34;&gt;# salmon requires all the transcripts being quantified to be concat into one file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$OVER_WRITE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -f &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;index_name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;_gentrome.fa&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			timed_print &lt;span class=&#34;s2&#34;&gt;&amp;#34;building gentrome...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			cat &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;TRANSCRIPTS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[@]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;REF_TRANSCRIPT&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;REF_GENOME&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;index_name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.fa&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;c1&#34;&gt;# adding --gencode flag due to salmon doing some preprocessing for it&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;c1&#34;&gt;# this flag does nothing for none gencode files (I think)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		salmon index -t &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;index_name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;.fa -d &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;index_name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;_decoys.txt&amp;#34;&lt;/span&gt; -i &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;index_name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;_index&amp;#34;&lt;/span&gt; --gencode
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;build_index&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$ALIGN_METHOD&lt;/span&gt; in
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		subread&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; subread_build_index &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		salmon&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; salmon_build_index &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;esac&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;qc&#34;&gt;QC&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fastp_qc&lt;span class=&#34;o&#34;&gt;(){&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;# results stored in /tmp/{name of the source}/qc/* and all end in *.qc.fq.gz&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$OVER_WRITE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -f &lt;span class=&#34;s2&#34;&gt;&amp;#34;tmp/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SOURCE&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/qc/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.qc.fq.gz&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$#&lt;/span&gt; -eq &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# if pair ended&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			./fastp -i &lt;span class=&#34;s2&#34;&gt;&amp;#34;tmp/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SOURCE&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.fq.gz&amp;#34;&lt;/span&gt; -o &lt;span class=&#34;s2&#34;&gt;&amp;#34;tmp/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SOURCE&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/qc/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.qc.fq.gz&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;				-I &lt;span class=&#34;s2&#34;&gt;&amp;#34;tmp/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SOURCE&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.fq.gz&amp;#34;&lt;/span&gt; -O &lt;span class=&#34;s2&#34;&gt;&amp;#34;tmp/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SOURCE&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/qc/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.qc.fq.gz&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;				-j &lt;span class=&#34;s2&#34;&gt;&amp;#34;results/fastp/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.json&amp;#34;&lt;/span&gt; -h &lt;span class=&#34;s2&#34;&gt;&amp;#34;results/fastp/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.html&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$#&lt;/span&gt; -eq &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# if single ended&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			./fastp -i &lt;span class=&#34;s2&#34;&gt;&amp;#34;tmp/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SOURCE&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.fq.gz&amp;#34;&lt;/span&gt; -o &lt;span class=&#34;s2&#34;&gt;&amp;#34;tmp/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SOURCE&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/qc/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.qc.fq.gz&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;				-j &lt;span class=&#34;s2&#34;&gt;&amp;#34;results/fastp/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.json&amp;#34;&lt;/span&gt; -h &lt;span class=&#34;s2&#34;&gt;&amp;#34;results/fastp/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.html&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;qc_all&lt;span class=&#34;o&#34;&gt;(){&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# only supports fastp as of now&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; ! -d &lt;span class=&#34;s2&#34;&gt;&amp;#34;tmp/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SOURCE&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/qc&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		mkdir &lt;span class=&#34;s2&#34;&gt;&amp;#34;tmp/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SOURCE&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/qc&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; ! -d &lt;span class=&#34;s2&#34;&gt;&amp;#34;results/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;QC_METHOD&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		mkdir &lt;span class=&#34;s2&#34;&gt;&amp;#34;results/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;QC_METHOD&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	timed_print &lt;span class=&#34;s2&#34;&gt;&amp;#34;qc-ing with &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$QC_METHOD&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;, &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; -r r1 r2&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# loop over pair file, csv&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$OVER_WRITE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -d &lt;span class=&#34;s2&#34;&gt;&amp;#34;results/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ALIGN_METHOD&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$r1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;#if salmon quant already exists&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			timed_print &lt;span class=&#34;s2&#34;&gt;&amp;#34;qc-ing &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;r1&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; and &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;r2&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$QC_METHOD&lt;/span&gt; in 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;				fastp&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; fastp_qc &lt;span class=&#34;nv&#34;&gt;$r1&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$r2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;k&#34;&gt;esac&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt; &amp;lt; &lt;span class=&#34;nv&#34;&gt;$PAIR_FILE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;quantification&#34;&gt;quantification&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;salmon_quant&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;# get the same index_name as specified in &amp;#34;salmon_build_index()&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;index_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;salmon/&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;-&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;TRANSCRIPTS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[*]%.*&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;#salmon outputs into a dir, so we check for that instead&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;c1&#34;&gt;#results stored in results/salmon/*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$OVER_WRITE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -d &lt;span class=&#34;s2&#34;&gt;&amp;#34;results/salmon/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		mkdir results/salmon/&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$#&lt;/span&gt; -eq &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# if pair ended&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			salmon quant -i &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;index_name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;_index&amp;#34;&lt;/span&gt; -l A -1 &lt;span class=&#34;s2&#34;&gt;&amp;#34;tmp/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SOURCE&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/qc/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.qc.fq.gz&amp;#34;&lt;/span&gt; -2 &lt;span class=&#34;s2&#34;&gt;&amp;#34;tmp/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SOURCE&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/qc/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.qc.fq.gz&amp;#34;&lt;/span&gt; --validateMappings -o &lt;span class=&#34;s2&#34;&gt;&amp;#34;results/salmon/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;#sleep 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$#&lt;/span&gt; -eq &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# if single ended&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			salmon quant -i &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;index_name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;_index&amp;#34;&lt;/span&gt; -l A -r &lt;span class=&#34;s2&#34;&gt;&amp;#34;tmp/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SOURCE&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/qc/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.qc.fq.gz&amp;#34;&lt;/span&gt; --validateMappings -o &lt;span class=&#34;s2&#34;&gt;&amp;#34;results/salmon/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;c1&#34;&gt;#sleep 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;salmon_count&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;, &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; -r r1 r2&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		salmon_quant &lt;span class=&#34;nv&#34;&gt;$r1&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$r2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt; &amp;lt; &lt;span class=&#34;nv&#34;&gt;$PAIR_FILE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;count_all&lt;span class=&#34;o&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -d &lt;span class=&#34;s2&#34;&gt;&amp;#34;results/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ALIGN_METHOD&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		mkdir &lt;span class=&#34;s2&#34;&gt;&amp;#34;results/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ALIGN_METHOD&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$ALIGN_METHOD&lt;/span&gt; in 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		subread&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; subread_count &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		salmon&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; salmon_count
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;esac&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
